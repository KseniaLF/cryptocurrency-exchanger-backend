{
  "openapi": "3.0.1",
  "info": {
    "version": "0.5.1",
    "title": "Cryptocurrency exchanger",
    "description": "Cryptocurrency exchanger's API"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3001" },
    { "url": "https://crypto-ag2e.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Review",
      "description": "Review endpoints"
    }
  ],

  "paths": {
    "/users/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Current user data",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "Logout user, clear the token",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "Successful operation",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "/api/review": {
      "get": {
        "tags": ["Review"],
        "summary": "Get all reviews with status: pending",
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "schema": {
              "type": "string",
              "default": null
            },
            "description": "Cursor from previos response"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "pending"
            },
            "description": "Review status"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 2
            },
            "description": "Items on the page"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllReviewsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Review not found"
          }
        }
      }
    },
    "/api/review/{id}": {
      "patch": {
        "tags": ["Review"],
        "summary": "Update review status for admins",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the review to update"
          }
        ],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Review Status Update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewStatusUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Review status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewStatusUpdateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Review not found"
          }
        }
      }
    },
    "/api/review/my": {
      "get": {
        "tags": ["Review"],
        "summary": "Get my review",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },

      "post": {
        "tags": ["Review"],
        "summary": "Add or update my review",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "Review's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful created review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "200": {
            "description": "Successful updated review",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      },

      "delete": {
        "tags": ["Review"],
        "summary": "Delete my review",

        "parameters": [],
        "security": [{ "Bearer": [] }],

        "responses": {
          "200": {
            "description": "Your review is successful deleted",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User Name"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "User Name"
            },
            "token": {
              "type": "string",
              "description": "User's token",
              "example": "rsgr456sbert"
            }
          }
        },
        "example": {
          "token": "rsgr456sbert",
          "user": {
            "name": "User Name",
            "email": "user@example.com"
          }
        }
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "User Name"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          }
        }
      },
      "ReviewRequest": {
        "type": "object",
        "required": ["review"],
        "properties": {
          "review": {
            "type": "string",
            "description": "User's review",
            "example": "Good app"
          }
        }
      },
      "ReviewResponse": {
        "type": "object",
        "properties": {
          "review": {
            "type": "string",
            "description": "User's review",
            "example": "Good app"
          },
          "id": {
            "type": "string",
            "description": "Review's id",
            "example": "64eb5ac981281a81a9aff02f"
          }
        }
      },
      "AllReviewsResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "_id": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Review's id",
                  "format": "email"
                },
                "review": {
                  "type": "string",
                  "description": "User's review",
                  "example": "Good app"
                },
                "status": {
                  "type": "string",
                  "description": "Review's status",
                  "example": "pending"
                },
                "owner": {
                  "type": "object",
                  "description": "Review's owner",
                  "example": {
                    "_id": "64ec2488249ccdd3015cb71b",
                    "email": "user@example.com",
                    "name": "User Name",
                    "role": "user",
                    "createdAt": "2023-08-30T12:45:55.112Z"
                  }
                },
                "createdAt": {
                  "type": "string",
                  "description": "Date when the review was created",
                  "example": "2023-08-30T12:45:55.112Z"
                }
              }
            }
          },
          "nextCursor": {
            "type": "string",
            "description": "Cursor: Transaction's id",
            "example": "64eb5ac981281a81a9aff02f"
          }
        }
      },
      "ReviewStatusUpdateRequest": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Review's status",
            "example": "accepted"
          }
        }
      },
      "ReviewStatusUpdateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Review's status",
            "example": "accepted"
          },
          "_id": {
            "type": "string",
            "description": "Review's id",
            "example": "64eb5ac981281a81a9aff02f"
          },
          "owner": {
            "type": "string",
            "description": "Review's owner",
            "example": "64ec2488249ccdd3015cb71b"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
